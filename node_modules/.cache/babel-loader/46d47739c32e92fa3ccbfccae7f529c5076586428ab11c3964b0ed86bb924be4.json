{"ast":null,"code":"import React,{useState}from'react';import{Box,VStack,Heading,Text,Button,RadioGroup,Radio,Stack,HStack,Badge}from'@chakra-ui/react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const RBANSTest=_ref=>{let{questions,onComplete}=_ref;const[selectedAttention,setSelectedAttention]=useState('partial');const[selectedMemory,setSelectedMemory]=useState('partial');const[selectedLanguage,setSelectedLanguage]=useState('partial');const handleSubmit=()=>{const mapping={fail:40,partial:70,success:95};const total=Math.round((mapping[selectedAttention]+mapping[selectedMemory]+mapping[selectedLanguage])/3);onComplete(total);};return/*#__PURE__*/_jsxs(VStack,{spacing:5,align:\"stretch\",children:[/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Heading,{size:\"md\",mb:2,children:\"\\u6CE8\\u610F\\u529B\\u6D4B\\u8BD5\"}),questions.attention.map(question=>/*#__PURE__*/_jsxs(VStack,{align:\"stretch\",spacing:3,bg:\"gray.50\",p:4,rounded:\"md\",children:[/*#__PURE__*/_jsx(Text,{fontWeight:\"medium\",children:question.instruction}),/*#__PURE__*/_jsxs(Badge,{colorScheme:\"purple\",children:[\"\\u5E8F\\u5217\\uFF1A\",question.sequence]}),/*#__PURE__*/_jsxs(Text,{fontSize:\"sm\",color:\"gray.600\",children:[\"\\u9650\\u65F6 \",question.timeLimit,\" \\u79D2\"]}),/*#__PURE__*/_jsx(RadioGroup,{value:selectedAttention,onChange:setSelectedAttention,children:/*#__PURE__*/_jsxs(Stack,{direction:\"row\",spacing:4,children:[/*#__PURE__*/_jsx(Radio,{value:\"fail\",children:\"\\u672A\\u5B8C\\u6210\"}),/*#__PURE__*/_jsx(Radio,{value:\"partial\",children:\"\\u90E8\\u5206\\u5B8C\\u6210\"}),/*#__PURE__*/_jsx(Radio,{value:\"success\",children:\"\\u5B8C\\u5168\\u6B63\\u786E\"})]})})]},question.id))]}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Heading,{size:\"md\",mb:2,children:\"\\u8BB0\\u5FC6\\u6D4B\\u8BD5\"}),questions.memory.map(question=>/*#__PURE__*/_jsxs(VStack,{align:\"stretch\",spacing:3,bg:\"gray.50\",p:4,rounded:\"md\",children:[/*#__PURE__*/_jsx(Text,{fontWeight:\"medium\",children:question.instruction}),/*#__PURE__*/_jsx(HStack,{spacing:2,wrap:\"wrap\",children:question.words.map(word=>/*#__PURE__*/_jsx(Badge,{colorScheme:\"blue\",children:word},word))}),/*#__PURE__*/_jsxs(Text,{fontSize:\"sm\",color:\"gray.600\",children:[\"\\u5C55\\u793A \",question.displayTime,\" \\u79D2\\uFF0C\\u5EF6\\u8FDF \",Math.round(question.recallDelay/60),\" \\u5206\\u949F\"]}),/*#__PURE__*/_jsx(RadioGroup,{value:selectedMemory,onChange:setSelectedMemory,children:/*#__PURE__*/_jsxs(Stack,{direction:\"row\",spacing:4,children:[/*#__PURE__*/_jsx(Radio,{value:\"fail\",children:\"\\u672A\\u8BB0\\u4F4F\"}),/*#__PURE__*/_jsx(Radio,{value:\"partial\",children:\"\\u8BB0\\u4F4F\\u90E8\\u5206\"}),/*#__PURE__*/_jsx(Radio,{value:\"success\",children:\"\\u5168\\u90E8\\u8BB0\\u4F4F\"})]})})]},question.id))]}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Heading,{size:\"md\",mb:2,children:\"\\u8BED\\u8A00\\u529F\\u80FD\"}),questions.language.map(question=>/*#__PURE__*/_jsxs(VStack,{align:\"stretch\",spacing:3,bg:\"gray.50\",p:4,rounded:\"md\",children:[/*#__PURE__*/_jsx(Text,{fontWeight:\"medium\",children:question.instruction}),/*#__PURE__*/_jsxs(Text,{fontSize:\"sm\",color:\"gray.600\",children:[\"\\u6B63\\u786E\\u7B54\\u6848\\uFF1A\",question.correctAnswer]}),/*#__PURE__*/_jsx(RadioGroup,{value:selectedLanguage,onChange:setSelectedLanguage,children:/*#__PURE__*/_jsxs(Stack,{direction:\"row\",spacing:4,children:[/*#__PURE__*/_jsx(Radio,{value:\"fail\",children:\"\\u672A\\u547D\\u4E2D\"}),/*#__PURE__*/_jsx(Radio,{value:\"partial\",children:\"\\u63D0\\u793A\\u540E\\u5B8C\\u6210\"}),/*#__PURE__*/_jsx(Radio,{value:\"success\",children:\"\\u4E00\\u6B21\\u6210\\u529F\"})]})})]},question.id))]}),/*#__PURE__*/_jsx(Button,{colorScheme:\"blue\",onClick:handleSubmit,children:\"\\u8BB0\\u5F55\\u672C\\u6B21 RBANS \\u7ED3\\u679C\"})]});};export default/*#__PURE__*/React.memo(RBANSTest);","map":{"version":3,"names":["React","useState","Box","VStack","Heading","Text","Button","RadioGroup","Radio","Stack","HStack","Badge","jsx","_jsx","jsxs","_jsxs","RBANSTest","_ref","questions","onComplete","selectedAttention","setSelectedAttention","selectedMemory","setSelectedMemory","selectedLanguage","setSelectedLanguage","handleSubmit","mapping","fail","partial","success","total","Math","round","spacing","align","children","size","mb","attention","map","question","bg","p","rounded","fontWeight","instruction","colorScheme","sequence","fontSize","color","timeLimit","value","onChange","direction","id","memory","wrap","words","word","displayTime","recallDelay","language","correctAnswer","onClick","memo"],"sources":["/Users/apple-dev/Desktop/test3/brain-fit/src/components/assessment/RBANSTest.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Box,\n  VStack,\n  Heading,\n  Text,\n  Button,\n  RadioGroup,\n  Radio,\n  Stack,\n  HStack,\n  Badge,\n} from '@chakra-ui/react';\n\ninterface DigitSpanQuestion {\n  id: string;\n  type: 'digit_span';\n  instruction: string;\n  sequence: string;\n  timeLimit: number;\n}\n\ninterface WordListQuestion {\n  id: string;\n  type: 'word_list';\n  instruction: string;\n  words: string[];\n  displayTime: number;\n  recallDelay: number;\n}\n\ninterface PictureNamingQuestion {\n  id: string;\n  type: 'picture_naming';\n  instruction: string;\n  image: string;\n  correctAnswer: string;\n}\n\ninterface RBANSQuestions {\n  attention: DigitSpanQuestion[];\n  memory: WordListQuestion[];\n  language: PictureNamingQuestion[];\n}\n\ninterface RBANSTestProps {\n  questions: RBANSQuestions;\n  onComplete: (score: number) => void;\n}\n\nconst RBANSTest: React.FC<RBANSTestProps> = ({ questions, onComplete }) => {\n  const [selectedAttention, setSelectedAttention] = useState<string>('partial');\n  const [selectedMemory, setSelectedMemory] = useState<string>('partial');\n  const [selectedLanguage, setSelectedLanguage] = useState<string>('partial');\n\n  const handleSubmit = () => {\n    const mapping: Record<string, number> = {\n      fail: 40,\n      partial: 70,\n      success: 95,\n    };\n    const total = Math.round(\n      (mapping[selectedAttention] + mapping[selectedMemory] + mapping[selectedLanguage]) / 3\n    );\n    onComplete(total);\n  };\n\n  return (\n    <VStack spacing={5} align=\"stretch\">\n      <Box>\n        <Heading size=\"md\" mb={2}>\n          注意力测试\n        </Heading>\n        {questions.attention.map((question) => (\n          <VStack key={question.id} align=\"stretch\" spacing={3} bg=\"gray.50\" p={4} rounded=\"md\">\n            <Text fontWeight=\"medium\">{question.instruction}</Text>\n            <Badge colorScheme=\"purple\">序列：{question.sequence}</Badge>\n            <Text fontSize=\"sm\" color=\"gray.600\">\n              限时 {question.timeLimit} 秒\n            </Text>\n            <RadioGroup value={selectedAttention} onChange={setSelectedAttention}>\n              <Stack direction=\"row\" spacing={4}>\n                <Radio value=\"fail\">未完成</Radio>\n                <Radio value=\"partial\">部分完成</Radio>\n                <Radio value=\"success\">完全正确</Radio>\n              </Stack>\n            </RadioGroup>\n          </VStack>\n        ))}\n      </Box>\n\n      <Box>\n        <Heading size=\"md\" mb={2}>\n          记忆测试\n        </Heading>\n        {questions.memory.map((question) => (\n          <VStack key={question.id} align=\"stretch\" spacing={3} bg=\"gray.50\" p={4} rounded=\"md\">\n            <Text fontWeight=\"medium\">{question.instruction}</Text>\n            <HStack spacing={2} wrap=\"wrap\">\n              {question.words.map((word) => (\n                <Badge key={word} colorScheme=\"blue\">\n                  {word}\n                </Badge>\n              ))}\n            </HStack>\n            <Text fontSize=\"sm\" color=\"gray.600\">\n              展示 {question.displayTime} 秒，延迟 {Math.round(question.recallDelay / 60)} 分钟\n            </Text>\n            <RadioGroup value={selectedMemory} onChange={setSelectedMemory}>\n              <Stack direction=\"row\" spacing={4}>\n                <Radio value=\"fail\">未记住</Radio>\n                <Radio value=\"partial\">记住部分</Radio>\n                <Radio value=\"success\">全部记住</Radio>\n              </Stack>\n            </RadioGroup>\n          </VStack>\n        ))}\n      </Box>\n\n      <Box>\n        <Heading size=\"md\" mb={2}>\n          语言功能\n        </Heading>\n        {questions.language.map((question) => (\n          <VStack key={question.id} align=\"stretch\" spacing={3} bg=\"gray.50\" p={4} rounded=\"md\">\n            <Text fontWeight=\"medium\">{question.instruction}</Text>\n            <Text fontSize=\"sm\" color=\"gray.600\">\n              正确答案：{question.correctAnswer}\n            </Text>\n            <RadioGroup value={selectedLanguage} onChange={setSelectedLanguage}>\n              <Stack direction=\"row\" spacing={4}>\n                <Radio value=\"fail\">未命中</Radio>\n                <Radio value=\"partial\">提示后完成</Radio>\n                <Radio value=\"success\">一次成功</Radio>\n              </Stack>\n            </RadioGroup>\n          </VStack>\n        ))}\n      </Box>\n\n      <Button colorScheme=\"blue\" onClick={handleSubmit}>\n        记录本次 RBANS 结果\n      </Button>\n    </VStack>\n  );\n};\n\nexport default React.memo(RBANSTest);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}