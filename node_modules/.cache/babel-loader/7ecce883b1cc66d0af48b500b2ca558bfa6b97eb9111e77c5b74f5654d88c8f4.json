{"ast":null,"code":"import _objectSpread from\"/Users/apple-dev/Desktop/test3/brain-fit/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useEffect,useMemo,useState}from'react';import{Box,Grid,GridItem,Text,VStack,Button,HStack}from'@chakra-ui/react';import{motion}from'framer-motion';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const MotionBox=motion(Box);const CardMatching=_ref=>{let{cards,concentration,onComplete}=_ref;const[flippedCards,setFlippedCards]=useState([]);const[matchedCards,setMatchedCards]=useState([]);const[activeCards,setActiveCards]=useState([]);const[attempts,setAttempts]=useState(0);const[timeRemaining,setTimeRemaining]=useState(120);const[isComplete,setIsComplete]=useState(false);const shuffledCards=useMemo(()=>{return[...cards.cards].sort(()=>Math.random()-0.5);},[cards.cards]);useEffect(()=>{if(isComplete){return;}const timer=window.setInterval(()=>{setTimeRemaining(prev=>{if(prev<=1){window.clearInterval(timer);handleComplete();return 0;}return prev-1;});},1000);return()=>window.clearInterval(timer);// eslint-disable-next-line react-hooks/exhaustive-deps\n},[isComplete]);useEffect(()=>{if(activeCards.length===2){const[first,second]=activeCards;setAttempts(prev=>prev+1);if(first.id===second.pair||second.id===first.pair){setMatchedCards(prev=>[...prev,first.id,second.id]);setActiveCards([]);}else{const timeout=window.setTimeout(()=>{setFlippedCards(prev=>prev.filter(id=>id!==first.id&&id!==second.id));setActiveCards([]);},800);return()=>window.clearTimeout(timeout);}}if(matchedCards.length===shuffledCards.length&&shuffledCards.length>0&&!isComplete){handleComplete();}return undefined;// eslint-disable-next-line react-hooks/exhaustive-deps\n},[activeCards,matchedCards,shuffledCards.length]);const handleCardClick=(card,index)=>{if(isComplete){return;}if(flippedCards.includes(card.id)||matchedCards.includes(card.id)||activeCards.length===2){return;}setFlippedCards(prev=>[...prev,card.id]);setActiveCards(prev=>[...prev,_objectSpread(_objectSpread({},card),{},{index})]);};const handleComplete=()=>{if(isComplete){return;}setIsComplete(true);const accuracy=shuffledCards.length?matchedCards.length/shuffledCards.length:0;const focusModifier=concentration/100;const attemptEfficiency=attempts?Math.min(1,shuffledCards.length/(attempts*2)):1;const timeEfficiency=Math.min(1,timeRemaining/120+0.2);const score=Math.round((accuracy*0.5+focusModifier*0.3+attemptEfficiency*0.1+timeEfficiency*0.1)*100);onComplete(score);};const resetGame=()=>{setFlippedCards([]);setMatchedCards([]);setActiveCards([]);setAttempts(0);setTimeRemaining(120);setIsComplete(false);};return/*#__PURE__*/_jsxs(VStack,{spacing:4,p:6,align:\"stretch\",children:[/*#__PURE__*/_jsxs(HStack,{justify:\"space-between\",children:[/*#__PURE__*/_jsx(Text,{fontSize:\"lg\",fontWeight:\"bold\",children:\"\\u5361\\u7247\\u5339\\u914D\\u8BAD\\u7EC3\"}),/*#__PURE__*/_jsxs(Text,{fontSize:\"sm\",color:\"gray.500\",children:[\"\\u5269\\u4F59\\u65F6\\u95F4\\uFF1A\",timeRemaining,\" \\u79D2\"]})]}),/*#__PURE__*/_jsx(Grid,{templateColumns:\"repeat(4, 1fr)\",gap:3,children:shuffledCards.map((card,index)=>{const isFlipped=flippedCards.includes(card.id)||matchedCards.includes(card.id);return/*#__PURE__*/_jsx(GridItem,{children:/*#__PURE__*/_jsx(MotionBox,{onClick:()=>handleCardClick(card,index),bg:isFlipped?'blue.100':'gray.100',rounded:\"lg\",display:\"flex\",alignItems:\"center\",justifyContent:\"center\",height:\"70px\",cursor:\"pointer\",whileTap:{scale:0.95},children:/*#__PURE__*/_jsx(Text,{fontSize:\"2xl\",children:isFlipped?card.content:'?'})})},\"\".concat(card.id,\"-\").concat(index));})}),/*#__PURE__*/_jsx(Button,{variant:\"outline\",onClick:resetGame,children:\"\\u91CD\\u65B0\\u5F00\\u59CB\"})]});};export default/*#__PURE__*/React.memo(CardMatching);","map":{"version":3,"names":["React","useEffect","useMemo","useState","Box","Grid","GridItem","Text","VStack","Button","HStack","motion","jsx","_jsx","jsxs","_jsxs","MotionBox","CardMatching","_ref","cards","concentration","onComplete","flippedCards","setFlippedCards","matchedCards","setMatchedCards","activeCards","setActiveCards","attempts","setAttempts","timeRemaining","setTimeRemaining","isComplete","setIsComplete","shuffledCards","sort","Math","random","timer","window","setInterval","prev","clearInterval","handleComplete","length","first","second","id","pair","timeout","setTimeout","filter","clearTimeout","undefined","handleCardClick","card","index","includes","_objectSpread","accuracy","focusModifier","attemptEfficiency","min","timeEfficiency","score","round","resetGame","spacing","p","align","children","justify","fontSize","fontWeight","color","templateColumns","gap","map","isFlipped","onClick","bg","rounded","display","alignItems","justifyContent","height","cursor","whileTap","scale","content","concat","variant","memo"],"sources":["/Users/apple-dev/Desktop/test3/brain-fit/src/components/training/CardMatching.tsx"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\nimport { Box, Grid, GridItem, Text, VStack, Button, HStack } from '@chakra-ui/react';\nimport { motion } from 'framer-motion';\n\ninterface Card {\n  id: string;\n  content: string;\n  pair: string;\n}\n\ninterface CardSet {\n  id: string;\n  difficulty: string;\n  cards: Card[];\n}\n\ninterface CardMatchingProps {\n  cards: CardSet;\n  concentration: number;\n  onComplete: (score: number) => void;\n}\n\nconst MotionBox = motion(Box);\n\ntype ActiveCard = Card & { index: number };\n\nconst CardMatching: React.FC<CardMatchingProps> = ({ cards, concentration, onComplete }) => {\n  const [flippedCards, setFlippedCards] = useState<string[]>([]);\n  const [matchedCards, setMatchedCards] = useState<string[]>([]);\n  const [activeCards, setActiveCards] = useState<ActiveCard[]>([]);\n  const [attempts, setAttempts] = useState(0);\n  const [timeRemaining, setTimeRemaining] = useState(120);\n  const [isComplete, setIsComplete] = useState(false);\n\n  const shuffledCards = useMemo(() => {\n    return [...cards.cards].sort(() => Math.random() - 0.5);\n  }, [cards.cards]);\n\n  useEffect(() => {\n    if (isComplete) {\n      return;\n    }\n\n    const timer = window.setInterval(() => {\n      setTimeRemaining((prev) => {\n        if (prev <= 1) {\n          window.clearInterval(timer);\n          handleComplete();\n          return 0;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n\n    return () => window.clearInterval(timer);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isComplete]);\n\n  useEffect(() => {\n    if (activeCards.length === 2) {\n      const [first, second] = activeCards;\n      setAttempts((prev) => prev + 1);\n\n      if (first.id === second.pair || second.id === first.pair) {\n        setMatchedCards((prev) => [...prev, first.id, second.id]);\n        setActiveCards([]);\n      } else {\n        const timeout = window.setTimeout(() => {\n          setFlippedCards((prev) => prev.filter((id) => id !== first.id && id !== second.id));\n          setActiveCards([]);\n        }, 800);\n        return () => window.clearTimeout(timeout);\n      }\n    }\n\n    if (matchedCards.length === shuffledCards.length && shuffledCards.length > 0 && !isComplete) {\n      handleComplete();\n    }\n\n    return undefined;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [activeCards, matchedCards, shuffledCards.length]);\n\n  const handleCardClick = (card: Card, index: number) => {\n    if (isComplete) {\n      return;\n    }\n\n    if (flippedCards.includes(card.id) || matchedCards.includes(card.id) || activeCards.length === 2) {\n      return;\n    }\n\n    setFlippedCards((prev) => [...prev, card.id]);\n    setActiveCards((prev) => [...prev, { ...card, index }]);\n  };\n\n  const handleComplete = () => {\n    if (isComplete) {\n      return;\n    }\n\n    setIsComplete(true);\n    const accuracy = shuffledCards.length ? matchedCards.length / shuffledCards.length : 0;\n    const focusModifier = concentration / 100;\n    const attemptEfficiency = attempts ? Math.min(1, shuffledCards.length / (attempts * 2)) : 1;\n    const timeEfficiency = Math.min(1, timeRemaining / 120 + 0.2);\n    const score = Math.round((accuracy * 0.5 + focusModifier * 0.3 + attemptEfficiency * 0.1 + timeEfficiency * 0.1) * 100);\n    onComplete(score);\n  };\n\n  const resetGame = () => {\n    setFlippedCards([]);\n    setMatchedCards([]);\n    setActiveCards([]);\n    setAttempts(0);\n    setTimeRemaining(120);\n    setIsComplete(false);\n  };\n\n  return (\n    <VStack spacing={4} p={6} align=\"stretch\">\n      <HStack justify=\"space-between\">\n        <Text fontSize=\"lg\" fontWeight=\"bold\">\n          卡片匹配训练\n        </Text>\n        <Text fontSize=\"sm\" color=\"gray.500\">\n          剩余时间：{timeRemaining} 秒\n        </Text>\n      </HStack>\n      <Grid templateColumns=\"repeat(4, 1fr)\" gap={3}>\n        {shuffledCards.map((card, index) => {\n          const isFlipped = flippedCards.includes(card.id) || matchedCards.includes(card.id);\n          return (\n            <GridItem key={`${card.id}-${index}`}>\n              <MotionBox\n                onClick={() => handleCardClick(card, index)}\n                bg={isFlipped ? 'blue.100' : 'gray.100'}\n                rounded=\"lg\"\n                display=\"flex\"\n                alignItems=\"center\"\n                justifyContent=\"center\"\n                height=\"70px\"\n                cursor=\"pointer\"\n                whileTap={{ scale: 0.95 }}\n              >\n                <Text fontSize=\"2xl\">{isFlipped ? card.content : '?'}</Text>\n              </MotionBox>\n            </GridItem>\n          );\n        })}\n      </Grid>\n      <Button variant=\"outline\" onClick={resetGame}>\n        重新开始\n      </Button>\n    </VStack>\n  );\n};\n\nexport default React.memo(CardMatching);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}