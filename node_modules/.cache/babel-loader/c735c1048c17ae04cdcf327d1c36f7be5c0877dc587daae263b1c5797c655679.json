{"ast":null,"code":"import _objectSpread from\"/Users/apple-dev/Desktop/test3/brain-fit/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";export function buildTrendSeries(progress){return progress.sessions.map(session=>({date:session.date,score:session.score,concentration:Math.round(session.averageConcentration*100)}));}export function estimateImprovementRate(progress){if(progress.sessions.length<2){return 0;}const sorted=[...progress.sessions].sort((a,b)=>a.date.localeCompare(b.date));const first=sorted[0];const last=sorted[sorted.length-1];const daysBetween=(new Date(last.date).getTime()-new Date(first.date).getTime())/(1000*60*60*24);if(daysBetween<=0){return 0;}const improvement=last.score-first.score;return Math.round(improvement/daysBetween*10)/10;}export function normalizeNetworkStrength(nodes){const maxStrength=Math.max(...nodes.map(node=>node.strength),1);return nodes.map(node=>_objectSpread(_objectSpread({},node),{},{strength:Math.round(node.strength/maxStrength*100)/100}));}","map":{"version":3,"names":["buildTrendSeries","progress","sessions","map","session","date","score","concentration","Math","round","averageConcentration","estimateImprovementRate","length","sorted","sort","a","b","localeCompare","first","last","daysBetween","Date","getTime","improvement","normalizeNetworkStrength","nodes","maxStrength","max","node","strength","_objectSpread"],"sources":["/Users/apple-dev/Desktop/test3/brain-fit/src/utils/dataAnalysis.ts"],"sourcesContent":["interface SessionSummary {\n  date: string;\n  duration: number;\n  score: number;\n  averageConcentration: number;\n}\n\ninterface NetworkNode {\n  id: string;\n  label: string;\n  strength: number;\n}\n\ninterface NetworkLink {\n  source: string;\n  target: string;\n  value: number;\n}\n\ninterface ProgressData {\n  sessions: SessionSummary[];\n  network: {\n    nodes: NetworkNode[];\n    links: NetworkLink[];\n  };\n}\n\nexport interface TrendPoint {\n  date: string;\n  score: number;\n  concentration: number;\n}\n\nexport function buildTrendSeries(progress: ProgressData): TrendPoint[] {\n  return progress.sessions.map((session) => ({\n    date: session.date,\n    score: session.score,\n    concentration: Math.round(session.averageConcentration * 100),\n  }));\n}\n\nexport function estimateImprovementRate(progress: ProgressData): number {\n  if (progress.sessions.length < 2) {\n    return 0;\n  }\n\n  const sorted = [...progress.sessions].sort((a, b) => a.date.localeCompare(b.date));\n  const first = sorted[0];\n  const last = sorted[sorted.length - 1];\n\n  const daysBetween = (new Date(last.date).getTime() - new Date(first.date).getTime()) / (1000 * 60 * 60 * 24);\n  if (daysBetween <= 0) {\n    return 0;\n  }\n\n  const improvement = last.score - first.score;\n  return Math.round((improvement / daysBetween) * 10) / 10;\n}\n\nexport function normalizeNetworkStrength(nodes: NetworkNode[]): NetworkNode[] {\n  const maxStrength = Math.max(...nodes.map((node) => node.strength), 1);\n  return nodes.map((node) => ({\n    ...node,\n    strength: Math.round((node.strength / maxStrength) * 100) / 100,\n  }));\n}\n"],"mappings":"6HAiCA,MAAO,SAAS,CAAAA,gBAAgBA,CAACC,QAAsB,CAAgB,CACrE,MAAO,CAAAA,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAEC,OAAO,GAAM,CACzCC,IAAI,CAAED,OAAO,CAACC,IAAI,CAClBC,KAAK,CAAEF,OAAO,CAACE,KAAK,CACpBC,aAAa,CAAEC,IAAI,CAACC,KAAK,CAACL,OAAO,CAACM,oBAAoB,CAAG,GAAG,CAC9D,CAAC,CAAC,CAAC,CACL,CAEA,MAAO,SAAS,CAAAC,uBAAuBA,CAACV,QAAsB,CAAU,CACtE,GAAIA,QAAQ,CAACC,QAAQ,CAACU,MAAM,CAAG,CAAC,CAAE,CAChC,MAAO,EAAC,CACV,CAEA,KAAM,CAAAC,MAAM,CAAG,CAAC,GAAGZ,QAAQ,CAACC,QAAQ,CAAC,CAACY,IAAI,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAKD,CAAC,CAACV,IAAI,CAACY,aAAa,CAACD,CAAC,CAACX,IAAI,CAAC,CAAC,CAClF,KAAM,CAAAa,KAAK,CAAGL,MAAM,CAAC,CAAC,CAAC,CACvB,KAAM,CAAAM,IAAI,CAAGN,MAAM,CAACA,MAAM,CAACD,MAAM,CAAG,CAAC,CAAC,CAEtC,KAAM,CAAAQ,WAAW,CAAG,CAAC,GAAI,CAAAC,IAAI,CAACF,IAAI,CAACd,IAAI,CAAC,CAACiB,OAAO,CAAC,CAAC,CAAG,GAAI,CAAAD,IAAI,CAACH,KAAK,CAACb,IAAI,CAAC,CAACiB,OAAO,CAAC,CAAC,GAAK,IAAI,CAAG,EAAE,CAAG,EAAE,CAAG,EAAE,CAAC,CAC5G,GAAIF,WAAW,EAAI,CAAC,CAAE,CACpB,MAAO,EAAC,CACV,CAEA,KAAM,CAAAG,WAAW,CAAGJ,IAAI,CAACb,KAAK,CAAGY,KAAK,CAACZ,KAAK,CAC5C,MAAO,CAAAE,IAAI,CAACC,KAAK,CAAEc,WAAW,CAAGH,WAAW,CAAI,EAAE,CAAC,CAAG,EAAE,CAC1D,CAEA,MAAO,SAAS,CAAAI,wBAAwBA,CAACC,KAAoB,CAAiB,CAC5E,KAAM,CAAAC,WAAW,CAAGlB,IAAI,CAACmB,GAAG,CAAC,GAAGF,KAAK,CAACtB,GAAG,CAAEyB,IAAI,EAAKA,IAAI,CAACC,QAAQ,CAAC,CAAE,CAAC,CAAC,CACtE,MAAO,CAAAJ,KAAK,CAACtB,GAAG,CAAEyB,IAAI,EAAAE,aAAA,CAAAA,aAAA,IACjBF,IAAI,MACPC,QAAQ,CAAErB,IAAI,CAACC,KAAK,CAAEmB,IAAI,CAACC,QAAQ,CAAGH,WAAW,CAAI,GAAG,CAAC,CAAG,GAAG,EAC/D,CAAC,CACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}