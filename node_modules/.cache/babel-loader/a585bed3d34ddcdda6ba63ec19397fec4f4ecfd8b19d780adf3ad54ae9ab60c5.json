{"ast":null,"code":"import React,{useEffect,useState}from'react';import{Box,VStack,Text,HStack,Tag,Input,Button,SimpleGrid,useToast}from'@chakra-ui/react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const DISPLAY_DURATION=20;// seconds\nconst RecallTask=_ref=>{let{items,onComplete}=_ref;const[phase,setPhase]=useState('study');const[timeRemaining,setTimeRemaining]=useState(DISPLAY_DURATION);const[answers,setAnswers]=useState(['','','','','']);const toast=useToast();const studyItems=items.slice(0,5);useEffect(()=>{if(phase!=='study'){return;}const timer=window.setInterval(()=>{setTimeRemaining(prev=>{if(prev<=1){window.clearInterval(timer);setPhase('recall');return 0;}return prev-1;});},1000);return()=>window.clearInterval(timer);},[phase]);const handleAnswerChange=(index,value)=>{setAnswers(prev=>{const clone=[...prev];clone[index]=value;return clone;});};const handleSubmit=()=>{const normalizedAnswers=answers.map(answer=>answer.trim());const correct=normalizedAnswers.filter(answer=>studyItems.some(item=>item.name===answer));const score=Math.round(correct.length/studyItems.length*100);toast({title:'回想任务完成',description:\"\\u6B63\\u786E\\u9879\\u76EE\\uFF1A\".concat(correct.length,\" / \").concat(studyItems.length),status:'success',duration:2000});onComplete(score);};return/*#__PURE__*/_jsx(VStack,{spacing:6,p:6,align:\"stretch\",children:phase==='study'?/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsxs(HStack,{justify:\"space-between\",mb:4,children:[/*#__PURE__*/_jsx(Text,{fontSize:\"lg\",fontWeight:\"bold\",children:\"\\u8BB0\\u5FC6\\u56DE\\u60F3\\u8BAD\\u7EC3\"}),/*#__PURE__*/_jsxs(Text,{fontSize:\"sm\",color:\"gray.500\",children:[\"\\u5269\\u4F59\\u65F6\\u95F4\\uFF1A\",timeRemaining,\" \\u79D2\"]})]}),/*#__PURE__*/_jsx(SimpleGrid,{columns:2,spacing:3,children:studyItems.map(item=>/*#__PURE__*/_jsx(Tag,{size:\"lg\",justifyContent:\"center\",py:3,children:item.name},item.id))})]}):/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Text,{fontSize:\"lg\",fontWeight:\"bold\",mb:4,children:\"\\u8F93\\u5165\\u4F60\\u8BB0\\u5F97\\u7684\\u7269\\u54C1\\u540D\\u79F0\"}),/*#__PURE__*/_jsx(VStack,{spacing:3,align:\"stretch\",children:answers.map((answer,index)=>/*#__PURE__*/_jsx(Input,{placeholder:\"\\u8BB0\\u5FC6\\u7269\\u54C1 \".concat(index+1),value:answer,onChange:event=>handleAnswerChange(index,event.target.value)},index))}),/*#__PURE__*/_jsx(Button,{mt:6,colorScheme:\"blue\",onClick:handleSubmit,children:\"\\u63D0\\u4EA4\\u7B54\\u6848\"})]})});};export default/*#__PURE__*/React.memo(RecallTask);","map":{"version":3,"names":["React","useEffect","useState","Box","VStack","Text","HStack","Tag","Input","Button","SimpleGrid","useToast","jsx","_jsx","jsxs","_jsxs","DISPLAY_DURATION","RecallTask","_ref","items","onComplete","phase","setPhase","timeRemaining","setTimeRemaining","answers","setAnswers","toast","studyItems","slice","timer","window","setInterval","prev","clearInterval","handleAnswerChange","index","value","clone","handleSubmit","normalizedAnswers","map","answer","trim","correct","filter","some","item","name","score","Math","round","length","title","description","concat","status","duration","spacing","p","align","children","justify","mb","fontSize","fontWeight","color","columns","size","justifyContent","py","id","placeholder","onChange","event","target","mt","colorScheme","onClick","memo"],"sources":["/Users/apple-dev/Desktop/test3/brain-fit/src/components/training/RecallTask.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  Box,\n  VStack,\n  Text,\n  HStack,\n  Tag,\n  Input,\n  Button,\n  SimpleGrid,\n  useToast,\n} from '@chakra-ui/react';\n\ninterface RecallItem {\n  id: string;\n  name: string;\n}\n\ninterface RecallTaskProps {\n  items: RecallItem[];\n  onComplete: (score: number) => void;\n}\n\nconst DISPLAY_DURATION = 20; // seconds\n\nconst RecallTask: React.FC<RecallTaskProps> = ({ items, onComplete }) => {\n  const [phase, setPhase] = useState<'study' | 'recall'>('study');\n  const [timeRemaining, setTimeRemaining] = useState(DISPLAY_DURATION);\n  const [answers, setAnswers] = useState<string[]>(['', '', '', '', '']);\n  const toast = useToast();\n\n  const studyItems = items.slice(0, 5);\n\n  useEffect(() => {\n    if (phase !== 'study') {\n      return;\n    }\n\n    const timer = window.setInterval(() => {\n      setTimeRemaining((prev) => {\n        if (prev <= 1) {\n          window.clearInterval(timer);\n          setPhase('recall');\n          return 0;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n\n    return () => window.clearInterval(timer);\n  }, [phase]);\n\n  const handleAnswerChange = (index: number, value: string) => {\n    setAnswers((prev) => {\n      const clone = [...prev];\n      clone[index] = value;\n      return clone;\n    });\n  };\n\n  const handleSubmit = () => {\n    const normalizedAnswers = answers.map((answer) => answer.trim());\n    const correct = normalizedAnswers.filter((answer) =>\n      studyItems.some((item) => item.name === answer)\n    );\n    const score = Math.round((correct.length / studyItems.length) * 100);\n\n    toast({\n      title: '回想任务完成',\n      description: `正确项目：${correct.length} / ${studyItems.length}`,\n      status: 'success',\n      duration: 2000,\n    });\n\n    onComplete(score);\n  };\n\n  return (\n    <VStack spacing={6} p={6} align=\"stretch\">\n      {phase === 'study' ? (\n        <Box>\n          <HStack justify=\"space-between\" mb={4}>\n            <Text fontSize=\"lg\" fontWeight=\"bold\">\n              记忆回想训练\n            </Text>\n            <Text fontSize=\"sm\" color=\"gray.500\">\n              剩余时间：{timeRemaining} 秒\n            </Text>\n          </HStack>\n          <SimpleGrid columns={2} spacing={3}>\n            {studyItems.map((item) => (\n              <Tag key={item.id} size=\"lg\" justifyContent=\"center\" py={3}>\n                {item.name}\n              </Tag>\n            ))}\n          </SimpleGrid>\n        </Box>\n      ) : (\n        <Box>\n          <Text fontSize=\"lg\" fontWeight=\"bold\" mb={4}>\n            输入你记得的物品名称\n          </Text>\n          <VStack spacing={3} align=\"stretch\">\n            {answers.map((answer, index) => (\n              <Input\n                key={index}\n                placeholder={`记忆物品 ${index + 1}`}\n                value={answer}\n                onChange={(event) => handleAnswerChange(index, event.target.value)}\n              />\n            ))}\n          </VStack>\n          <Button mt={6} colorScheme=\"blue\" onClick={handleSubmit}>\n            提交答案\n          </Button>\n        </Box>\n      )}\n    </VStack>\n  );\n};\n\nexport default React.memo(RecallTask);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}