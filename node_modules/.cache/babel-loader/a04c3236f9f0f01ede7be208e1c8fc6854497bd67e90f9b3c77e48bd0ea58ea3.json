{"ast":null,"code":"import React,{useState}from'react';import{Box,VStack,Heading,Text,Button,Textarea,useToast,FormControl,FormLabel}from'@chakra-ui/react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const RBMTTest=_ref=>{let{questions,onComplete}=_ref;const[notes,setNotes]=useState('');const toast=useToast();const handleComplete=()=>{const score=notes.trim().length>0?90:60;onComplete(score,notes);toast({title:'已记录 RBMT 评估',description:\"\\u5206\\u6570\\u4F30\\u8BA1\\uFF1A\".concat(score),status:'success',duration:2000});setNotes('');};return/*#__PURE__*/_jsxs(VStack,{spacing:4,align:\"stretch\",children:[questions.map(question=>/*#__PURE__*/_jsxs(Box,{bg:\"gray.50\",p:4,rounded:\"md\",children:[/*#__PURE__*/_jsx(Heading,{size:\"sm\",mb:2,children:\"\\u65E5\\u5E38\\u8BB0\\u5FC6\\u4EFB\\u52A1\"}),/*#__PURE__*/_jsx(Text,{fontSize:\"sm\",color:\"gray.600\",children:question.instruction}),/*#__PURE__*/_jsxs(Text,{fontSize:\"xs\",color:\"gray.500\",mt:2,children:[\"\\u8BC4\\u4F30\\u65F6\\u95F4\\uFF1A\",Math.round(question.checkTime/60),\" \\u5206\\u949F\\u540E\"]})]},question.id)),/*#__PURE__*/_jsxs(FormControl,{children:[/*#__PURE__*/_jsx(FormLabel,{fontSize:\"sm\",children:\"\\u8BC4\\u4F30\\u8BB0\\u5F55\"}),/*#__PURE__*/_jsx(Textarea,{placeholder:\"\\u8BB0\\u5F55\\u53D7\\u8BD5\\u8005\\u7684\\u8868\\u73B0\\u3001\\u63D0\\u793A\\u8BED\\u548C\\u56DE\\u5FC6\\u60C5\\u51B5\",value:notes,onChange:event=>setNotes(event.target.value),rows:4})]}),/*#__PURE__*/_jsx(Button,{colorScheme:\"blue\",onClick:handleComplete,children:\"\\u4FDD\\u5B58 RBMT \\u8BC4\\u4F30\"})]});};export default/*#__PURE__*/React.memo(RBMTTest);","map":{"version":3,"names":["React","useState","Box","VStack","Heading","Text","Button","Textarea","useToast","FormControl","FormLabel","jsx","_jsx","jsxs","_jsxs","RBMTTest","_ref","questions","onComplete","notes","setNotes","toast","handleComplete","score","trim","length","title","description","concat","status","duration","spacing","align","children","map","question","bg","p","rounded","size","mb","fontSize","color","instruction","mt","Math","round","checkTime","id","placeholder","value","onChange","event","target","rows","colorScheme","onClick","memo"],"sources":["/Users/apple-dev/Desktop/test3/brain-fit/src/components/assessment/RBMTTest.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Box,\n  VStack,\n  Heading,\n  Text,\n  Button,\n  Textarea,\n  useToast,\n  FormControl,\n  FormLabel,\n} from '@chakra-ui/react';\n\ninterface RBMTQuestion {\n  id: string;\n  type: string;\n  instruction: string;\n  checkTime: number;\n}\n\ninterface RBMTTestProps {\n  questions: RBMTQuestion[];\n  onComplete: (score: number, notes: string) => void;\n}\n\nconst RBMTTest: React.FC<RBMTTestProps> = ({ questions, onComplete }) => {\n  const [notes, setNotes] = useState('');\n  const toast = useToast();\n\n  const handleComplete = () => {\n    const score = notes.trim().length > 0 ? 90 : 60;\n    onComplete(score, notes);\n    toast({\n      title: '已记录 RBMT 评估',\n      description: `分数估计：${score}`,\n      status: 'success',\n      duration: 2000,\n    });\n    setNotes('');\n  };\n\n  return (\n    <VStack spacing={4} align=\"stretch\">\n      {questions.map((question) => (\n        <Box key={question.id} bg=\"gray.50\" p={4} rounded=\"md\">\n          <Heading size=\"sm\" mb={2}>\n            日常记忆任务\n          </Heading>\n          <Text fontSize=\"sm\" color=\"gray.600\">\n            {question.instruction}\n          </Text>\n          <Text fontSize=\"xs\" color=\"gray.500\" mt={2}>\n            评估时间：{Math.round(question.checkTime / 60)} 分钟后\n          </Text>\n        </Box>\n      ))}\n      <FormControl>\n        <FormLabel fontSize=\"sm\">评估记录</FormLabel>\n        <Textarea\n          placeholder=\"记录受试者的表现、提示语和回忆情况\"\n          value={notes}\n          onChange={(event) => setNotes(event.target.value)}\n          rows={4}\n        />\n      </FormControl>\n      <Button colorScheme=\"blue\" onClick={handleComplete}>\n        保存 RBMT 评估\n      </Button>\n    </VStack>\n  );\n};\n\nexport default React.memo(RBMTTest);\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OACEC,GAAG,CACHC,MAAM,CACNC,OAAO,CACPC,IAAI,CACJC,MAAM,CACNC,QAAQ,CACRC,QAAQ,CACRC,WAAW,CACXC,SAAS,KACJ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAc1B,KAAM,CAAAC,QAAiC,CAAGC,IAAA,EAA+B,IAA9B,CAAEC,SAAS,CAAEC,UAAW,CAAC,CAAAF,IAAA,CAClE,KAAM,CAACG,KAAK,CAAEC,QAAQ,CAAC,CAAGnB,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAAAoB,KAAK,CAAGb,QAAQ,CAAC,CAAC,CAExB,KAAM,CAAAc,cAAc,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAAAC,KAAK,CAAGJ,KAAK,CAACK,IAAI,CAAC,CAAC,CAACC,MAAM,CAAG,CAAC,CAAG,EAAE,CAAG,EAAE,CAC/CP,UAAU,CAACK,KAAK,CAAEJ,KAAK,CAAC,CACxBE,KAAK,CAAC,CACJK,KAAK,CAAE,aAAa,CACpBC,WAAW,kCAAAC,MAAA,CAAUL,KAAK,CAAE,CAC5BM,MAAM,CAAE,SAAS,CACjBC,QAAQ,CAAE,IACZ,CAAC,CAAC,CACFV,QAAQ,CAAC,EAAE,CAAC,CACd,CAAC,CAED,mBACEN,KAAA,CAACX,MAAM,EAAC4B,OAAO,CAAE,CAAE,CAACC,KAAK,CAAC,SAAS,CAAAC,QAAA,EAChChB,SAAS,CAACiB,GAAG,CAAEC,QAAQ,eACtBrB,KAAA,CAACZ,GAAG,EAAmBkC,EAAE,CAAC,SAAS,CAACC,CAAC,CAAE,CAAE,CAACC,OAAO,CAAC,IAAI,CAAAL,QAAA,eACpDrB,IAAA,CAACR,OAAO,EAACmC,IAAI,CAAC,IAAI,CAACC,EAAE,CAAE,CAAE,CAAAP,QAAA,CAAC,sCAE1B,CAAS,CAAC,cACVrB,IAAA,CAACP,IAAI,EAACoC,QAAQ,CAAC,IAAI,CAACC,KAAK,CAAC,UAAU,CAAAT,QAAA,CACjCE,QAAQ,CAACQ,WAAW,CACjB,CAAC,cACP7B,KAAA,CAACT,IAAI,EAACoC,QAAQ,CAAC,IAAI,CAACC,KAAK,CAAC,UAAU,CAACE,EAAE,CAAE,CAAE,CAAAX,QAAA,EAAC,gCACrC,CAACY,IAAI,CAACC,KAAK,CAACX,QAAQ,CAACY,SAAS,CAAG,EAAE,CAAC,CAAC,qBAC5C,EAAM,CAAC,GATCZ,QAAQ,CAACa,EAUd,CACN,CAAC,cACFlC,KAAA,CAACL,WAAW,EAAAwB,QAAA,eACVrB,IAAA,CAACF,SAAS,EAAC+B,QAAQ,CAAC,IAAI,CAAAR,QAAA,CAAC,0BAAI,CAAW,CAAC,cACzCrB,IAAA,CAACL,QAAQ,EACP0C,WAAW,CAAC,wGAAmB,CAC/BC,KAAK,CAAE/B,KAAM,CACbgC,QAAQ,CAAGC,KAAK,EAAKhC,QAAQ,CAACgC,KAAK,CAACC,MAAM,CAACH,KAAK,CAAE,CAClDI,IAAI,CAAE,CAAE,CACT,CAAC,EACS,CAAC,cACd1C,IAAA,CAACN,MAAM,EAACiD,WAAW,CAAC,MAAM,CAACC,OAAO,CAAElC,cAAe,CAAAW,QAAA,CAAC,gCAEpD,CAAQ,CAAC,EACH,CAAC,CAEb,CAAC,CAED,2BAAejC,KAAK,CAACyD,IAAI,CAAC1C,QAAQ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}